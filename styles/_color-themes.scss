@import "./colors.module.scss";

$themes: (
  default: (
    primaryBackground: $primary,
    secondaryBackground: #f8f9fe,
    secondaryBackgroundAccent: #e5e6ea,
    navBackground: #fff,
    heroHeader: $coolblue,
    heroHeaderText: white,
    footer: $footerlight,
    cardBackground: $cardlight,
    recentBlogsText: black,
    importantContent: black,
    textColor: $defaultfontcolor,
    textColorOnWhite: #000,
  ),
  dark: (
    primaryBackground: $primarydark,
    secondaryBackground: #222527,
    heroHeader: #074c3f,
    heroHeaderText: white,
    footer: $footerdark,
    cardBackground: $carddark,
    recentBlogsText: white,
    importantContent: white,
    importantSecondary: $mainorange,
    textColor: #d2eeca,
    textColorOnWhite: white,
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
