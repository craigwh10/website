{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // type AxiosResponse = object[] | null;\n// interface GitProject {\n//   name: string;\n// }\n// interface Object {\n//   name: string;\n//   html_url: string;\n//   language: string;\n// }\n// interface GitProjects {\n//   data: Object[];\n// }\n\nconst useGitProjectCalculator = () => {\n  const {\n    0: gitLangFreq,\n    1: setGitRepos\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    axios.get(\"https://api.github.com/users/craigwh10/repos\").then(function (response) {\n      console.log(response); // I need this data here ^^\n\n      setGitRepos(response.reduce((acc, it) => {\n        acc[it.age] = acc[it.age] + 1 || 1;\n        return acc;\n      }, {}));\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return {\n    gitLangFreq,\n    isLoading\n  };\n};\n\nexport default useGitProjectCalculator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/container/gitprojects/gitProjectCalculator.ts"],"names":["useEffect","useState","axios","useGitProjectCalculator","gitLangFreq","setGitRepos","isLoading","setLoading","get","then","response","console","log","reduce","acc","it","age","catch","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AACpC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAA6BJ,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA0BN,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFM,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAA8B;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADkC,CAElC;;AACAL,MAAAA,WAAW,CACTK,QAAQ,CAACG,MAAT,CAAgB,CAACC,GAAD,EAAMC,EAAN,KAAa;AAC3BD,QAAAA,GAAG,CAACC,EAAE,CAACC,GAAJ,CAAH,GAAcF,GAAG,CAACC,EAAE,CAACC,GAAJ,CAAH,GAAc,CAAd,IAAmB,CAAjC;AACA,eAAOF,GAAP;AACD,OAHD,EAGG,EAHH,CADS,CAAX;AAOAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbH,EAcGU,KAdH,CAcS,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAhBH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,SAAO;AAAEd,IAAAA,WAAF;AAAeE,IAAAA;AAAf,GAAP;AACD,CAzBD;;AA2BA,eAAeH,uBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// type AxiosResponse = object[] | null;\n\n// interface GitProject {\n//   name: string;\n// }\n\n// interface Object {\n//   name: string;\n//   html_url: string;\n//   language: string;\n// }\n\n// interface GitProjects {\n//   data: Object[];\n// }\n\nconst useGitProjectCalculator = () => {\n  const [gitLangFreq, setGitRepos] = useState(null);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/craigwh10/repos\")\n      .then(function (response: object[]) {\n        console.log(response);\n        // I need this data here ^^\n        setGitRepos(\n          response.reduce((acc, it) => {\n            acc[it.age] = acc[it.age] + 1 || 1;\n            return acc;\n          }, {})\n        );\n\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return { gitLangFreq, isLoading };\n};\n\nexport default useGitProjectCalculator;\n"]},"metadata":{},"sourceType":"module"}