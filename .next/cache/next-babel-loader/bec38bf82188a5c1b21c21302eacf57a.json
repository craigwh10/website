{"ast":null,"code":"var _jsxFileName = \"/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\"; //\n\nimport GitLang from \"./GitLang\";\n\nconst LangGenerator = () => {\n  const {\n    gitLangFreq,\n    isLoading\n  } = useGitProjectCalculator();\n\n  if (isLoading) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  let gitLangs = gitLangFreq && Object.keys(gitLangFreq);\n  let gitCalc = [gitLangs, gitLangFreq];\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, gitLangFreq && gitCalc[0].map((item, index) => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(GitLang, {\n      key: index,\n      language: item[index],\n      ammount: item[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n\nexport default LangGenerator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx"],"names":["React","useGitProjectCalculator","GitLang","LangGenerator","gitLangFreq","isLoading","gitLangs","Object","keys","gitCalc","map","item","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,kDAApC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,aAAwB,GAAG,MAAM;AACrC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BJ,uBAAuB,EAA1D;;AAEA,MAAII,SAAJ,EAAe;AACb,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,MAAIC,QAAuB,GAAGF,WAAW,IAAIG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAA7C;AACA,MAAIK,OAAO,GAAG,CAACH,QAAD,EAAWF,WAAX,CAAd;AAEA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,IACVK,OAAO,CAAC,CAAD,CAAP,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,QAAQ,EAAED,IAAI,CAACC,KAAD,CAFhB;AAGE,MAAA,OAAO,EAAED,IAAI,CAACC,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD,GAVD,CAFJ,CADF;AAgBD,CA1BD;;AA4BA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\";\n//\nimport GitLang from \"./GitLang\";\nimport { First } from \"react-bootstrap/PageItem\";\nconst LangGenerator: React.SFC = () => {\n  const { gitLangFreq, isLoading } = useGitProjectCalculator();\n\n  if (isLoading) {\n    return <p>Loading</p>;\n  }\n\n  let gitLangs: Array<string> = gitLangFreq && Object.keys(gitLangFreq);\n  let gitCalc = [gitLangs, gitLangFreq];\n\n  return (\n    <React.Fragment>\n      {gitLangFreq &&\n        gitCalc[0].map((item, index) => {\n          return (\n            <React.Fragment>\n              <GitLang\n                key={index}\n                language={item[index]}\n                ammount={item[index]}\n              />\n            </React.Fragment>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport default LangGenerator;\n"]},"metadata":{},"sourceType":"module"}