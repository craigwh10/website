{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\"; //\n\nimport GitLang from \"./GitLang\";\n\nvar LangGenerator = function LangGenerator() {\n  var _useGitProjectCalcula = useGitProjectCalculator(),\n      gitLangFreq = _useGitProjectCalcula.gitLangFreq,\n      isLoading = _useGitProjectCalcula.isLoading;\n\n  if (isLoading) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  var gitLangs = gitLangFreq && Object.keys(gitLangFreq);\n  var gitCalc = gitLangs && {\n    gitLangs: gitLangs,\n    gitLangFreq: gitLangFreq\n  }; // const GitLangPrinter = (obj, obj2) => {\n  //   const Printed = [];\n  //   for (var i = 0; i < obj2.length; i++) {\n  //     Printed.push(\n  //       <GitLang key={i} language={obj2[i]} ammount={obj[obj2[i]]} />\n  //     );\n  //     console.log(Printed);\n  //     return Printed;\n  //   }\n  // };\n\n  var Printed = [];\n\n  for (var i = 0; i < gitLangs.length; i++) {\n    Printed.push(__jsx(GitLang, {\n      key: i,\n      language: gitLangs[i],\n      ammount: gitLangFreq[gitLangs[i]],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n    console.log(Printed);\n    return Printed;\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, gitLangFreq && Printed);\n};\n\nexport default LangGenerator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx"],"names":["React","useGitProjectCalculator","GitLang","LangGenerator","gitLangFreq","isLoading","gitLangs","Object","keys","gitCalc","Printed","i","length","push","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,kDAApC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,IAAMC,aAAwB,GAAG,SAA3BA,aAA2B,GAAM;AAAA,8BACFF,uBAAuB,EADrB;AAAA,MAC7BG,WAD6B,yBAC7BA,WAD6B;AAAA,MAChBC,SADgB,yBAChBA,SADgB;;AAGrC,MAAIA,SAAJ,EAAe;AACb,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAED,MAAIC,QAAuB,GAAGF,WAAW,IAAIG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAA7C;AACA,MAAIK,OAAO,GAAGH,QAAQ,IAAI;AAAEA,IAAAA,QAAQ,EAARA,QAAF;AAAYF,IAAAA,WAAW,EAAXA;AAAZ,GAA1B,CARqC,CAUrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMM,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACM,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,OAAO,CAACG,IAAR,CACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAEF,CADP;AAEE,MAAA,QAAQ,EAAEL,QAAQ,CAACK,CAAD,CAFpB;AAGE,MAAA,OAAO,EAAEP,WAAW,CAACE,QAAQ,CAACK,CAAD,CAAT,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAOA,OAAP;AACD;;AAED,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBN,WAAW,IAAIM,OAAhC,CAAP;AACD,CAnCD;;AAqCA,eAAeP,aAAf","sourcesContent":["import React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\";\n//\nimport GitLang from \"./GitLang\";\nimport { First } from \"react-bootstrap/PageItem\";\nconst LangGenerator: React.SFC = () => {\n  const { gitLangFreq, isLoading } = useGitProjectCalculator();\n\n  if (isLoading) {\n    return <p>Loading</p>;\n  }\n\n  let gitLangs: Array<string> = gitLangFreq && Object.keys(gitLangFreq);\n  let gitCalc = gitLangs && { gitLangs, gitLangFreq };\n\n  // const GitLangPrinter = (obj, obj2) => {\n  //   const Printed = [];\n  //   for (var i = 0; i < obj2.length; i++) {\n  //     Printed.push(\n  //       <GitLang key={i} language={obj2[i]} ammount={obj[obj2[i]]} />\n  //     );\n  //     console.log(Printed);\n  //     return Printed;\n  //   }\n  // };\n\n  const Printed = [];\n  for (var i = 0; i < gitLangs.length; i++) {\n    Printed.push(\n      <GitLang\n        key={i}\n        language={gitLangs[i]}\n        ammount={gitLangFreq[gitLangs[i]]}\n      />\n    );\n    console.log(Printed);\n    return Printed;\n  }\n\n  return <React.Fragment>{gitLangFreq && Printed}</React.Fragment>;\n};\n\nexport default LangGenerator;\n"]},"metadata":{},"sourceType":"module"}