{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // type AxiosResponse = object[] | null;\n// interface GitProject {\n//   name: string;\n// }\n\nconst useGitProjectCalculator = () => {\n  const [gitLangFreq, setGitRepos] = useState < object < Frequency >> null;\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    axios.get(\"https://api.github.com/users/craigwh10/repos\").then(function (response) {\n      setGitRepos(response.data.reduce((acc, it) => {\n        acc[it.language] = acc[it.language] + 1 || 1;\n        return acc;\n      }, {}));\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return {\n    gitLangFreq,\n    isLoading\n  };\n};\n\nexport default useGitProjectCalculator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/container/gitprojects/gitProjectCalculator.ts"],"names":["useEffect","useState","axios","useGitProjectCalculator","gitLangFreq","setGitRepos","object","Frequency","isLoading","setLoading","get","then","response","data","reduce","acc","it","language","catch","error","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;;AAMA,MAAMC,uBAAuB,GAAG,MAAM;AACpC,QAAM,CAACC,WAAD,EAAcC,WAAd,IAA6BJ,QAAQ,GAAGK,MAAX,GAAoBC,SAAS,IAAI,IAApE;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA0BR,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFQ,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBP,MAAAA,WAAW,CACTO,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAACC,GAAD,EAAMC,EAAN,KAAa;AAChCD,QAAAA,GAAG,CAACC,EAAE,CAACC,QAAJ,CAAH,GAAmBF,GAAG,CAACC,EAAE,CAACC,QAAJ,CAAH,GAAmB,CAAnB,IAAwB,CAA3C;AACA,eAAOF,GAAP;AACD,OAHD,EAGG,EAHH,CADS,CAAX;AAMAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVH,EAWGS,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAbH;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAO;AAAEf,IAAAA,WAAF;AAAeI,IAAAA;AAAf,GAAP;AACD,CAtBD;;AAwBA,eAAeL,uBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// type AxiosResponse = object[] | null;\n\n// interface GitProject {\n//   name: string;\n// }\n\ninterface Frequency {\n  language: number;\n}\n\nconst useGitProjectCalculator = () => {\n  const [gitLangFreq, setGitRepos] = useState < object < Frequency >> null;\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/craigwh10/repos\")\n      .then(function (response) {\n        setGitRepos(\n          response.data.reduce((acc, it) => {\n            acc[it.language] = acc[it.language] + 1 || 1;\n            return acc;\n          }, {})\n        );\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return { gitLangFreq, isLoading };\n};\n\nexport default useGitProjectCalculator;\n"]},"metadata":{},"sourceType":"module"}