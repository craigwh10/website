{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // type AxiosResponse = object[] | null;\n\nvar useGitProjects = function useGitProjects() {\n  var _useState = useState(null),\n      gitRepos = _useState[0],\n      setGitRepos = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    // const fetchGit = async () => {\n    //   await axios(\"https://api.github.com/users/craigwh10/repos\");\n    // };\n    axios.get(\"https://api.github.com/users/craigwh10/repos\").then(function (response) {\n      console.log(response); // I need this data here ^^\n\n      return response;\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }, []);\n  return [gitRepos, isLoading];\n};\n\nexport default useGitProjects;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/container/gitprojects/useGitProjects.ts"],"names":["useEffect","useState","axios","useGitProjects","gitRepos","setGitRepos","isLoading","setLoading","get","then","response","console","log","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACKF,QAAQ,CAAc,IAAd,CADb;AAAA,MACpBG,QADoB;AAAA,MACVC,WADU;;AAAA,mBAEKJ,QAAQ,CAAU,KAAV,CAFb;AAAA,MAEpBK,SAFoB;AAAA,MAETC,UAFS;;AAI3BP,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AAEAE,IAAAA,KAAK,CACFM,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADwB,CAExB;;AACA,aAAOA,QAAP;AACD,KANH,WAOS,UAAUG,KAAV,EAAiB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KATH;AAUD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAO,CAACT,QAAD,EAAWE,SAAX,CAAP;AACD,CAtBD;;AAwBA,eAAeH,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// type AxiosResponse = object[] | null;\n\ninterface GitProject {\n  data: object;\n}\n\ninterface GitProjects {\n  data: GitProject[] | null;\n}\n\nconst useGitProjects = () => {\n  const [gitRepos, setGitRepos] = useState<GitProjects>(null);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    // const fetchGit = async () => {\n    //   await axios(\"https://api.github.com/users/craigwh10/repos\");\n    // };\n\n    axios\n      .get(\"https://api.github.com/users/craigwh10/repos\")\n      .then(function (response) {\n        console.log(response);\n        // I need this data here ^^\n        return response;\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return [gitRepos, isLoading];\n};\n\nexport default useGitProjects;\n"]},"metadata":{},"sourceType":"module"}