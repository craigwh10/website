{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\"; //\n\nimport GitProject from \"./GitProject\";\n\nvar LangGenerator = function LangGenerator() {\n  var _useGitProjectCalcula = useGitProjectCalculator(),\n      gitLangFreq = _useGitProjectCalcula.gitLangFreq,\n      gitLangs = _useGitProjectCalcula.gitLangs,\n      isLoading = _useGitProjectCalcula.isLoading;\n\n  if (isLoading) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  console.log(gitLangFreq);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, Object.entries(gitLangFreq).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return __jsx(GitProject, {\n      language: key,\n      ammount: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default LangGenerator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/components/ProjectCalculator/LangGenerator.tsx"],"names":["React","useGitProjectCalculator","GitProject","LangGenerator","gitLangFreq","gitLangs","isLoading","console","log","Object","entries","forEach","key","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,uBAAP,MAAoC,kDAApC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,aAAwB,GAAG,SAA3BA,aAA2B,GAAM;AAAA,8BACQF,uBAAuB,EAD/B;AAAA,MAC7BG,WAD6B,yBAC7BA,WAD6B;AAAA,MAChBC,QADgB,yBAChBA,QADgB;AAAA,MACNC,SADM,yBACNA,SADM;;AAGrC,MAAIA,SAAJ,EAAe;AACb,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACC,OAAP,CAAeN,WAAf,EAA4BO,OAA5B,CAAoC,gBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AACrD,WAAO,MAAC,UAAD;AAAY,MAAA,QAAQ,EAAED,GAAtB;AAA2B,MAAA,OAAO,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF;AAOD,CAhBD;;AAkBA,eAAeV,aAAf","sourcesContent":["import React from \"react\";\nimport useGitProjectCalculator from \"../../container/gitprojects/gitProjectCalculator\";\n//\nimport GitProject from \"./GitProject\";\nimport { First } from \"react-bootstrap/PageItem\";\nconst LangGenerator: React.SFC = () => {\n  const { gitLangFreq, gitLangs, isLoading } = useGitProjectCalculator();\n\n  if (isLoading) {\n    return <p>Loading</p>;\n  }\n\n  console.log(gitLangFreq);\n\n  return (\n    <React.Fragment>\n      {Object.entries(gitLangFreq).forEach(([key, value]) => {\n        return <GitProject language={key} ammount={value} />;\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default LangGenerator;\n"]},"metadata":{},"sourceType":"module"}