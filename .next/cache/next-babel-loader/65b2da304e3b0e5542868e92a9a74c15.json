{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/craigwhite/Desktop/Typescript/Website/components/ProjectGenerator/ProjectGenerator.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useGitProjects from \"../../container/gitprojects/useGitProjects\";\n\nvar ProjectGenerator = function ProjectGenerator() {\n  var _useGitProjects = useGitProjects(),\n      gitRepos = _useGitProjects.gitRepos,\n      isLoading = _useGitProjects.isLoading;\n\n  if (isLoading) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  } else {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, gitRepos.map(function (item) {\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }\n      }, \"hi\");\n    }));\n  }\n};\n\nexport default ProjectGenerator;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/components/ProjectGenerator/ProjectGenerator.tsx"],"names":["React","useGitProjects","ProjectGenerator","gitRepos","isLoading","map","item"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;;AAEA,IAAMC,gBAA2B,GAAG,SAA9BA,gBAA8B,GAAM;AAAA,wBACRD,cAAc,EADN;AAAA,MAChCE,QADgC,mBAChCA,QADgC;AAAA,MACtBC,SADsB,mBACtBA,SADsB;;AAGxC,MAAIA,SAAJ,EAAe;AACb,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,GAFD,MAEO;AACL,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CADH,CADF;AAOD;AACF,CAdD;;AAgBA,eAAeJ,gBAAf","sourcesContent":["import React from \"react\";\nimport useGitProjects from \"../../container/gitprojects/useGitProjects\";\n\nconst ProjectGenerator: React.SFC = () => {\n  const { gitRepos, isLoading } = useGitProjects();\n\n  if (isLoading) {\n    return <p>Loading</p>;\n  } else {\n    return (\n      <React.Fragment>\n        {gitRepos.map((item) => {\n          return <p>hi</p>;\n        })}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default ProjectGenerator;\n"]},"metadata":{},"sourceType":"module"}