{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // type AxiosResponse = object[] | null;\n\nconst useGitProjects = () => {\n  const {\n    0: gitRepos,\n    1: setGitRepos\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    axios.get(\"https://api.github.com/users/craigwh10/repos\").then(function (response) {\n      console.log(response); // I need this data here ^^\n\n      setGitRepos(response);\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return {\n    gitRepos,\n    isLoading\n  };\n};\n\nexport default useGitProjects;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/container/gitprojects/useGitProjects.ts"],"names":["useEffect","useState","axios","useGitProjects","gitRepos","setGitRepos","isLoading","setLoading","get","then","response","console","log","catch","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAUA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,CAAc,IAAd,CAAxC;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA0BN,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFM,GADH,CACO,8CADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADwB,CAExB;;AACAL,MAAAA,WAAW,CAACK,QAAD,CAAX;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPH,EAQGM,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAO;AAAEV,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP;AACD,CAnBD;;AAqBA,eAAeH,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// type AxiosResponse = object[] | null;\n\ninterface GitProject {\n  data: object;\n}\n\ninterface GitProjects {\n  data: GitProject[] | null;\n}\n\nconst useGitProjects = () => {\n  const [gitRepos, setGitRepos] = useState<GitProjects>(null);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.github.com/users/craigwh10/repos\")\n      .then(function (response) {\n        console.log(response);\n        // I need this data here ^^\n        setGitRepos(response);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return { gitRepos, isLoading };\n};\n\nexport default useGitProjects;\n"]},"metadata":{},"sourceType":"module"}