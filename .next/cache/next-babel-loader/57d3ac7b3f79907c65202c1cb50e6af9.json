{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // type AxiosResponse = object[] | null;\n\nvar useGitProjects = function useGitProjects() {\n  var _useState = useState(null),\n      gitRepos = _useState[0],\n      setGitRepos = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchGit = function fetchGit() {\n      return _regeneratorRuntime.async(function fetchGit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios(\"https://api.github.com/users/craigwh10/repos\"));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var result = fetchGit();\n    console.log(result);\n\n    if (result) {\n      setGitRepos(result.data);\n      setLoading(false);\n    }\n  }, []);\n  return [gitRepos, isLoading];\n};\n\nexport default useGitProjects;","map":{"version":3,"sources":["/Users/craigwhite/Desktop/Typescript/Website/container/gitprojects/useGitProjects.ts"],"names":["useEffect","useState","axios","useGitProjects","gitRepos","setGitRepos","isLoading","setLoading","fetchGit","result","console","log","data"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACKF,QAAQ,CAAgB,IAAhB,CADb;AAAA,MACpBG,QADoB;AAAA,MACVC,WADU;;AAAA,mBAEKJ,QAAQ,CAAU,KAAV,CAFb;AAAA,MAEpBK,SAFoB;AAAA,MAETC,UAFS;;AAI3BP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACFN,KAAK,CAAC,8CAAD,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAGA,QAAIO,MAAM,GAAGD,QAAQ,EAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAIA,MAAJ,EAAY;AACVJ,MAAAA,WAAW,CAACI,MAAM,CAACG,IAAR,CAAX;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO,CAACH,QAAD,EAAWE,SAAX,CAAP;AACD,CAjBD;;AAmBA,eAAeH,cAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// type AxiosResponse = object[] | null;\n\nconst useGitProjects = () => {\n  const [gitRepos, setGitRepos] = useState<Array<object>>(null);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchGit = async () => {\n      return await axios(\"https://api.github.com/users/craigwh10/repos\");\n    };\n    let result = fetchGit();\n    console.log(result);\n    if (result) {\n      setGitRepos(result.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return [gitRepos, isLoading];\n};\n\nexport default useGitProjects;\n"]},"metadata":{},"sourceType":"module"}